@using System.Activities.Statements
@using System.Globalization
@using DoctorPremium.Web.Helpers

@model DoctorPremium.Web.Models.PatientEditViewModel
@{
    ViewBag.Title = "Просмотр карточки пациента";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head {
    @Scripts.Render("~/bundles/assetsPatientJS")
    @Scripts.Render("~/bundles/ChosenJS")
    @*@Scripts.Render("~/bundles/UploadJS")*@
    @Styles.Render("~/Content/ChosenCSS")
    @*@Styles.Render("~/bundles/UploadCSS")*@
    @Styles.Render("~/bundles/TablesCSS")
    @Scripts.Render("~/bundles/TablesJS")

    <style type="text/css">
        .td-class {
            font-size: 11px;
            text-align: left;
            font-weight: bold;
        }

        .area2col {
            width: 27px;
        }

        .col2 {
            width: 25px;
        }

        .form-control[disabled],
        .form-control[readonly],
        fieldset[disabled] .form-control {
            color: black;
            font-weight: bold;
        }
    </style>

}


<div class="row">
    <div class="heading">
        <h3>@Resources.PatientInfo.PatientLabel: </h3>
        @if (Model.PatientId > 0)
        {
            <span class="font-bold top13">@FullNameHelper.GetFullName(Model.LastName, Model.FirstName, Model.SurName)</span>
            if (ViewBag.Debt >= 0)
            {
                <span class="icon16 icomoon-icon-coin left" style="float: right;font-size:20px"> </span>
                <span class="font-bold top13" style="color:green; float: right; margin-left: 15px; font-size: 25px; margin-right: 15px;">@ViewBag.Debt.ToString("0.00")</span>
                <span class="font-bold top13 hidden-xs" style="color:green; float: right; font-size: 25px;    margin-right: 5px;">@Resources.PatientInfo.BalanceVal:</span>
            }
            else
            {
                <span class="icon16 icomoon-icon-coin left" style="float: right;font-size:20px;    margin-right: 5px;"> </span>
                <span class="font-bold top13" style="color:red; float: right; margin-left: 15px; font-size:25px;    margin-right: 15px;">@ViewBag.Debt.ToString("0.00")</span>
                <span class="font-bold top13 hidden-xs" style="color:red; float: right; font-size: 25px;    margin-right: 5px;">@Resources.PatientInfo.BalanceVal:</span>
            }
        }
    </div>

    <div class="panel-body">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#patientcard_name_tab" data-toggle="tab">@Resources.PatientInfo.AllInfo</a>
            </li>
            <li>
                <a id="visit_history" href="#patientcard_medical_history_tab" data-toggle="tab">@Resources.PatientInfo.History</a>
            </li>
            <li>
                <a href="#patientcard_medical_Bloor_tab" data-toggle="tab">@Resources.PatientInfo.Dental</a>
            </li>
            <li>
                <a href="#patientcard_upload_tab" data-toggle="tab">@Resources.PatientInfo.Upload</a>
            </li>
            <li>
                <a href="#patientcard_medical_delete_tab" data-toggle="tab">@Resources.PatientInfo.Delete</a>
            </li>


        </ul>
        @*@using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()*@
        @Html.HiddenFor(model => model.PatientId)
        <div id="pPatientVisitInfo" class="tab-content">
            <div class="tab-pane fade in active" id="patientcard_name_tab" data-model-name="PatientModel">
                <div class="row top15 ">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <div class="fileupload-new thumbnail" style="width: 200px; height: 150px;">
                                @if (!String.IsNullOrEmpty(Model.Photo))
                                {
                                    <img src=@String.Concat("/Photos/", Model.Photo) alt="" style="height: 140px;" />
                                }
                                else
                                {
                                    <img src="" style="height: 140px;" alt="" />@*@Url.Content("/Content/assets/css/../img/demoUpload.jpg")*@



                                }

                            </div>
                        </div>

                        <div class="form-group">
                            @if (Model.Debt >= 0)
                            {
                                @Html.LabelFor(model => model.Debt, new { style = "color:green" })
                                @Html.EditorFor(model => model.Debt, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "color:green" } })
                                @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                                <p class="help-block"></p>
                            }
                            else
                            {
                                @Html.LabelFor(model => model.Debt, new { style = "color:red" })
                                @Html.EditorFor(model => model.Debt, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "color:red" } })
                                @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                                <p class="help-block"></p>
                            }
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName)
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SurName)
                            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthDate)
                            <div class="input-group" data-model-field="BirthDate">
                                @Html.TextBoxFor(model => model.BirthDate, "{0:d}", new { @class = "form-control", data_mask = "99/99/9999", @disabled = "disabled" })
                                <span class="input-group-addon" data-model-assoc-field="BirthDate" data-format="{0} years"></span>
                            </div>
                            @*@Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="form-group">
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.IsMale, Model.genderItems, new { @class = "form-control", @disabled = "disabled" })
                                @*@Html.EditorFor(model => model.IsMale, new { htmlAttributes = new { @class = "form-control" } })*@
                                @*@Html.ValidationMessageFor(model => model.IsMale, "", new { @class = "text-danger" })*@
                                <p class="help-block"></p>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email)

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment)
                            @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Anamnez)
                            @Html.TextAreaFor(model => model.Anamnez, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.Anamnez, "", new { @class = "text-danger" })*@
                        </div>

                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.HomePhone)
                            <div class="input-group">
                                @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } }) @*, data_mask = "(999) 999-9999"*@
                                @*@Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MobilePhone)
                            <div class="input-group">
                                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } }) @*, data_mask = "(999) 999-9999"*@
                                @*@Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryId)
                            @Html.DropDownListFor(model => model.CountryId, Model.countryItems, "Country", new { @class = "form-control", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CityId)
                            @Html.DropDownListFor(model => model.CityId, Model.cityItems, "City", new { @class = "form-control", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger"  })*@
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address)
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.WorkPlace)
                            @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @*@Html.ValidationMessageFor(model => model.WorkPlace, "", new { @class = "text-danger" })*@
                            <p class="help-block"></p>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AnyContact)
                            @Html.TextAreaFor(model => model.AnyContact, new { @class = "form-control", rows = "1", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.AnyContact, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImmunoStatus)
                            @Html.TextAreaFor(model => model.ImmunoStatus, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.ImmunoStatus, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AdditionalInfo)
                            @Html.TextAreaFor(model => model.AdditionalInfo, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AlergoStatus)
                            @Html.TextAreaFor(model => model.AlergoStatus, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                            @*@Html.ValidationMessageFor(model => model.AlergoStatus, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="patientcard_medical_history_tab" data-model-name="PatientModel">
                <div class="box" style="margin-top: 10px">

                    <header>

                        <div class="toolbar">
                            <div class="btn-group">
                                @Html.ActionLink(@Resources.PatientInfo.NewVisit, "New", "PatientVisit", new { patientid = Model.PatientId }, new { @class = "btn btn-success btn-sm" })
                            </div>
                        </div>
                    </header>
                    <div class="panel-body">
                        <div class="table-responsive top15" style="overflow: scroll; outline: none;">
                            <table id="PatientVisitsTable" class="dynamicTable display table table-bordered dataTable">
                                <colgroup>
                                    <col style="width: 30px" />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>@Resources.PatientInfo.Data</th>
                                        <th>@Resources.PatientInfo.Time</th>
                                        <th>@Resources.PatientInfo.Goal</th>
                                        <th>@Resources.PatientInfo.Cost</th>
                                        <th>@Resources.PatientInfo.Paid</th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>


                <script type="text/javascript">
                    $('.timepicker-empty').timepicker({ 'defaultTime': false });
                </script>

            </div>
            <div class="tab-pane fade" id="patientcard_medical_Bloor_tab" data-model-name="PatientModel">
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Blore)*@
                    <div class="box">
                        <header>

                            <div class="toolbar">
                                <div class="btn-group">
                                    <a href="#sortableTable" data-toggle="collapse" class="btn btn-default btn-sm accordion-toggle minimize-box">
                                        <i class="icon-chevron-up"></i>
                                    </a>
                                </div>
                            </div>
                        </header>
                        <div id="sortableTable" class="body in">
                            <div class="form-group">
                                <table style="width: 100%; table-layout: fixed;">
                                    <colgroup>
                                        <col style="width: 10%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                        <col style="width: 5%; height: 25px" />
                                    </colgroup>
                                    @if (Model.DentalCards != null && Model.DentalCards.Any())
                                    {
                                        <tr>
                                            <td></td>
                                            @for (int i = 0; i < 16; i++)
                                            {
                                                <td>
                                                    @Html.HiddenFor(m => m.DentalCards[i].DentalCardId)
                                                    @Html.HiddenFor(m => m.DentalCards[i].OrderNumber)
                                                    @Html.TextAreaFor(m => m.DentalCards[i].Description, new { @class = "form-control area2col", rows = "5", @disabled = "disabled" })
                                                </td>
                                            }
                                        </tr>
                                        <tr>
                                            <td></td>
                                            @for (int i = 0; i < 16; i++)
                                            {
                                                <td>
                                                    @Html.CheckBoxFor(m => m.DentalCards[i].IsCheck, new { @class = "form-control col2", @disabled = "disabled" })
                                                </td>
                                            }
                                        </tr>
                                        <tr class="td-class">
                                            <td></td>
                                            <td>18</td>
                                            <td>17</td>
                                            <td>16</td>
                                            <td>15</td>
                                            <td>14</td>
                                            <td>13</td>
                                            <td>12</td>
                                            <td>11</td>
                                            <td>21</td>
                                            <td>22</td>
                                            <td>23</td>
                                            <td>24</td>
                                            <td>25</td>
                                            <td>26</td>
                                            <td>27</td>
                                            <td>28</td>
                                        </tr>
                                        <tr class="td-class">
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        <tr class="td-class">
                                            <td></td>
                                            <td>48</td>
                                            <td>47</td>
                                            <td>46</td>
                                            <td>45</td>
                                            <td>44</td>
                                            <td>43</td>
                                            <td>42</td>
                                            <td>41</td>
                                            <td>31</td>
                                            <td>32</td>
                                            <td>33</td>
                                            <td>34</td>
                                            <td>35</td>
                                            <td>36</td>
                                            <td>37</td>
                                            <td>38</td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            @for (int i = 31; i > 15; i--)
                                            {
                                                <td>
                                                    @Html.CheckBoxFor(m => m.DentalCards[i].IsCheck, new { @class = "form-control col2", @disabled = "disabled" })
                                                </td>
                                            }
                                        </tr>
                                        <tr>
                                            <td></td>
                                            @for (int i = 31; i > 15; i--)
                                            {
                                                <td class="td-class">
                                                    @Html.HiddenFor(m => m.DentalCards[i].DentalCardId)
                                                    @Html.HiddenFor(m => m.DentalCards[i].OrderNumber)
                                                    @Html.TextAreaFor(m => m.DentalCards[i].Description, new { @class = "form-control area2col", rows = "5", @disabled = "disabled" })
                                                </td>
                                            }
                                        </tr>


                                    }
                                </table>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CommentDentalCard)
                                        @Html.TextAreaFor(model => model.CommentDentalCard, new { @class = "form-control", rows = "3", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="tab-pane fade" id="patientcard_medical_delete_tab" data-model-name="PatientModel">
                <div class="row">
                    <div class="col-lg-6">

                        <button id="btnDelete" type="button" data-patientid="@Model.PatientId" class="btn btn-danger" style="float: left; ">@Resources.PatientInfo.Delete</button>
                    </div>
                    <div class="col-lg-6">

                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="patientcard_upload_tab" data-model-name="PatientModel">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @using (Html.BeginForm("UploadDocuments", "Patient", FormMethod.Post, new { id = "UploadDocumentsForm", enctype = "multipart/form-data" }))
                            {
                                <input type="hidden" name="PatientId" value="@Model.PatientId">
                                <ul class="no-marked">
                                    <li>
                                        <label for="file" class="btn">Select files</label>
                                        <input type="file" name="file[]" accept="image/*,.doc,.docx,.xls,xlsx,.txt,.zip,.rar,7z" id="upload_input1">
                                        <label class="display_block">@Resources.PatientInfo.Commemnt</label>
                                        <input type="text" class="form-control" multiple="multiple" id="upload_input" name="titles[0]">
                                    </li>
                                    <li>
                                        <label for="file" class="btn">Select files</label>
                                        <input type="file" name="file[]" accept="image/*,.doc,.docx,.xls,xlsx,.txt,.zip,.rar,7z" id="upload_input2">
                                        <label class="display_block">@Resources.PatientInfo.Commemnt</label>
                                        <input type="text" class="form-control" multiple="multiple" id="upload_input" name="titles[1]">
                                    </li>
                                    <li>
                                        <label for="file" class="btn">Select files</label>
                                        <input type="file" name="file[]" accept="image/*,.doc,.docx,.xls,xlsx,.txt,.zip,.rar,7z" id="upload_input3">
                                        <label class="display_block">@Resources.PatientInfo.Commemnt</label>
                                        <input type="text" class="form-control" multiple="multiple" id="upload_input" name="titles[2]">
                                    </li>
                                    <li>
                                        <input id="upload_docs" class="btn btn-primary" type="submit" value=@Resources.PatientInfo.FilesUpload>
                                    </li>
                                </ul>

                            }
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div id="DocumentList">
                            @{ Html.RenderAction("PatientDocumentList", new { patientId = Model.PatientId }); }
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="row top15">
            <div class="col-md-10 col-md-offset-8" style="margin-left: 8%">

                @Html.ActionLink(@Resources.PatientInfo.Edit, "Edit", "Patient", new { id = Model.PatientId }, new { @class = "btn btn-default", @style = "float: right" })
                @Html.ActionLink(@Resources.PatientInfo.List, "List", "Patient", null, new { @class = "btn btn-default", @style = "float: right; margin-right:8px" })

            </div>
        </div>

    </div>

</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("input#BirthDate").change(
                function () {
                    var sp = $(this).parent().find('span.input-group-addon');
                    var format = $(sp).attr('data-format');
                    var inVal = $(this).val();
                    if (/[0-9]{2}\/[0-9]{2}\/[0-9]{4}/g.exec(inVal) && new Date(inVal) < Date.now()) {
                        var age = calculateAge(new Date(inVal));
                        var text = format.replace('{0}', age); //String.format(format, age);
                        $(sp).text(text);
                    } else
                        $(sp).text('');
                });
            $("input#BirthDate").change();
        });

        $("#visit_history").click(function () {
            if (!$.fn.DataTable.isDataTable('#PatientVisitsTable')) {
                renderPatienVisitTable($('#PatientVisitsTable'), $('#PatientId').val(), '@(LanguageHelper.GetCurrentLanguage())');
            }
        });

        $("#btnDelete").click(function () {
            var id = $("#btnDelete").attr("data-Patientid");
            if (confirm("@Resources.Resource.DeleteConfirm")) {
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("DeleteDataPatient", "Patient")' + '?id=' + id,
                    data: $(this).serialize(),
                    success: function (data) {
                        if (data.success) {
                            window.location = '@Url.Action("List", "Patient")';
                        }
                    }
                });
            }
        });
    </script>
    @Scripts.Render("~/bundles/UploadJS")
}



