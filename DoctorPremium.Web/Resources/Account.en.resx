<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmEmailPage" xml:space="preserve">
    <value>Email is confirmed!</value>
  </data>
  <data name="ConfirmEmailSucceccMsg" xml:space="preserve">
    <value>Thank you for confirming your email. Please sign in web site with your username and password.</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirSendTitle" xml:space="preserve">
    <value>Please check your email to confirm email.  If you do not received a letter of confirmation of registration try to register  on another email address and please write  mail to us about this problem.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password</value>
  </data>
  <data name="ForgotPasswordBtn" xml:space="preserve">
    <value>Forgot</value>
  </data>
  <data name="ForgotPasswordConfirmMsg" xml:space="preserve">
    <value>Please check your email to reset your password.</value>
  </data>
  <data name="ForgotPasswordConfirmScs" xml:space="preserve">
    <value>Forgot Password Confirmation</value>
  </data>
  <data name="ForgotPasswordPage" xml:space="preserve">
    <value>Forgot password</value>
  </data>
  <data name="LoginBtn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginLink" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Login page</value>
  </data>
  <data name="MustBeLeast" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterBtn" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterPage" xml:space="preserve">
    <value>Register page</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="ResetPasswordBtn" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetPasswordConfirmMsg" xml:space="preserve">
    <value> Your password has been reset. Please Log in.</value>
  </data>
  <data name="ResetPasswordConfirmScs" xml:space="preserve">
    <value>Reset password confirmation</value>
  </data>
  <data name="ResetPasswordPage" xml:space="preserve">
    <value>Reset password page</value>
  </data>
  <data name="ThanksForRegister" xml:space="preserve">
    <value>Thanks for register!</value>
  </data>
  <data name="ToHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Term" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="Agree" xml:space="preserve">
    <value>I agree</value>
  </data>
  <data name="TextLicense" xml:space="preserve">
    <value>Features Pages
Information on the web page, posted on your page must conform to the laws of your country.
Content Pages
 Pages must not contain false, inaccurate, fraudulent, or misleading statements, materials and must comply with the laws of your country.
If you register on the site, then automatically you agree with the rules.
For the information stored in your account on the site, you are responsible for the laws in your country. Dr. premium is not responsible for the safety of your information, as well as for getting it to third parties.
If you register on the site doctor-premium.com means you automatically agree with our rules.</value>
  </data>
  <data name="IAgree" xml:space="preserve">
    <value>I agree</value>
  </data>
  <data name="CapsButton" xml:space="preserve">
    <value>Please enter correct symbols from picture and turn off capslock.</value>
  </data>
  <data name="CheckLicense" xml:space="preserve">
    <value>Please check license</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Doctor-premium reset  password</value>
  </data>
  <data name="ResetPasswordBody" xml:space="preserve">
    <value>Please reset your password by clicking here:</value>
  </data>
  <data name="TopicConfirm" xml:space="preserve">
    <value>Doctor-premium confirm registration</value>
  </data>
  <data name="TopicConfirmBody" xml:space="preserve">
    <value>Please confirm your registration by clicking this link:</value>
  </data>
  <data name="ConfirmLink" xml:space="preserve">
    <value>Confirm registration link.</value>
  </data>
  <data name="ConfirmBtn" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmCode" xml:space="preserve">
    <value> Confirm code</value>
  </data>
  <data name="ConfirmManualTitle" xml:space="preserve">
    <value>Confirm email manual page</value>
  </data>
  <data name="EnterConfirmCode" xml:space="preserve">
    <value>Enter confirm code</value>
  </data>
</root>